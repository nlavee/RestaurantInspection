sqrt(.55*.45/1009)
se<- sqrt(.55*.45/1009)
se*1.645+521/1009
pt(((se*1.645+521/1009)-.55)/se, df=1008)
se*1.645+521/1009
pnorm(0.54)
1-pt(((se*1.645+521/1009)-.55)/se, df=1008)
se<- sqrt(.513*(1-.513/1009)
se*1.645+521/1009
se<- sqrt(.513*(1-.513)/1009)
se*1.645+521/1009
1-pt(((se*1.645+521/1009)-.55)/se, df=1008)
se*1.645+521/1009
se <- sd(ncbirths$Gender)
se<- sqrt(521/1009*(488/1009)/1009)
se*1.645+521/1009
1-pt(((se*1.645+521/1009)-.55)/se, df=1008)
1-pnorm(((se*1.645+.55)-513)/se)
se*1.645+.55
1-pnorm(((se*1.645+.55)-.513)/se)
1-pnorm(((se*1.645+.513)-.55)/se)
se<- sqrt(521/1009*(488/1009)/1009)
se*1.645+.55
1-pnorm(((se*1.645+.513)-.55)/se)
1-pnorm(((se*1.645+.513)-.55)/se)
1-pt(((se*1.645+.513)-.55)/se,1008)
1-pnorm(((se*1.645+.513)-.55)/se)
1-pt(((se*1.645+.513)-.55)/se,1008)
N <- 10^4-1
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
other.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor != "Chinese", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(other.restaurant, xlab = "Score", v = mean(other.restaurant))
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.other <- mean(other.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.other
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.other <- mean(other.restaurant, trim = 0.25)
observed.trmean.diff <- observed.trmean.score.chinese - observed.trmean.score.other
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(other.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((restaurant.clean$score[index])) - mean((restaurant.clean$score[-index]))
trmeanDiff[i] <- mean((restaurant.clean$score[index]), trim = 0.25) - mean((restaurant.clean$score[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Other Avg Score", main="Perm. Test b/w Chinese & Other cuisine", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Other Trimmed Median Score", main="Perm. Test b/w Chinese & Other cuisine", v = observed.trmean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
(sum(trmeanDiff > observed.trmean.diff) +1) / (N+1) # p-val
se <- sqrt(521/1009*(488/1009)/1009)
se
se*1.645+.513
pnorm(se*1.645+.513)
pt(se*1.645+.513,1008)
(0.525-.55)/0.157
(0.526-.55)/0.0157
1-pnorm(0.526-.55)/0.0157
1-pnorm((0.526-.55)/0.0157)
1-pnorm((0.539-.55)/0.0157)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(american.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((restaurant.clean$score[index])) - mean((restaurant.clean$score[-index]))
trmeanDiff[i] <- mean((restaurant.clean$score[index]), trim = 0.25) - mean((restaurant.clean$score[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(american.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((restaurant.clean$score[index])) - mean((restaurant.clean$score[-index]))
trmeanDiff[i] <- mean((restaurant.clean$score[index]), trim = 0.25) - mean((restaurant.clean$score[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.trmean.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.trmean.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Mean Score - Asian Trimmed Mean Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.trmean.diff)
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.mean.diff)
histogram(trmeanDiff, xlab = "Chinese Trimmed Mean Score - Other Trimmed Mean Score", main="Perm. Test b/w Chinese & Other cuisine", v = observed.trmean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Mean Score - Other Trimmed Mean Score", main="Perm. Test b/w Chinese & Other cuisine", v = observed.trmean.diff)
(sum(trmeanDiff > observed.trmean.diff) +1) / (N+1) # p-val
(sum(trmeanDiff > observed.trmean.diff) +1) / (N+1) # p-val
asian.and.chinese.restaurants <- c(chinese.restaurant, asian.restaurant)
asian.and.chinese.restaurants
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
asian.and.chinese.restaurants <- c(chinese.restaurant, asian.restaurant)
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(american.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((asian.and.chinese.restaurants$score[index])) - mean((asian.and.chinese.restaurants$score[-index]))
trmeanDiff[i] <- mean((asian.and.chinese.restaurants$score[index]), trim = 0.25) - mean((asian.and.chinese.restaurants$score[-index]), trim = 0.25)
}
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
asian.and.chinese.restaurants <- c(chinese.restaurant, asian.restaurant)
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(american.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((asian.and.chinese.restaurants[index])) - mean((asian.and.chinese.restaurants[-index]))
trmeanDiff[i] <- mean((asian.and.chinese.restaurants[index]), trim = 0.25) - mean((asian.and.chinese.restaurants[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Mean Score - Asian Trimmed Mean Score", main="Perm. Test b/w Chinese & Asian cuisine", v = observed.trmean.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
(sum(trmeanDiff > observed.trmean.diff) +1) / (N+1) # p-val
chinese.rows <- cbind( score = as.numeric(chinese.restaurant), cat = FALSE)
other.rows <- cbind( score = as.numeric(other.restaurant), cat = TRUE)
chinese.and.other <- as.data.frame(rbind( chinese.rows, other.rows))
favstats(score~cat, data = chinese.and.other)
t.test(score ~ cat, data = chinese.and.other, alt = "greater", var.equal = T)
t.test(chinese.restaurant, conf.level = 0.99)$conf
t.test(chinese.restaurant, conf.level = 0.99)$conf
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
t.test(score ~ cat, data = chinese.and.other, alt = "greater")
t.test(chinese.restaurant, conf.level = 0.99)$conf
t.test(chinese.restaurant, conf.level = 0.95)
t.test(chinese.restaurant, conf.level = 0.95)$conf
asian.rows <- cbind(score = as.numeric(asian.restaurant), cat = FALSE)
other.rows <- cbind( score = as.numeric(other.restaurant), cat = TRUE)
asian.and.other <- as.data.frame(rbind(asian.rows, other.rows))
favstats(score~cat, data = asian.and.other)
t.test(score ~ cat, data = asian.and.other, alt = "greater", var.equal = T)
t.test(chinese.restaurant, asian.restaurant)$conf
N <- 10^4-1
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
other.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor != "Chinese", drop = T)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(other.restaurant, xlab = "Score", v = mean(other.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.other <- mean(other.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.other
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.other <- mean(other.restaurant, trim = 0.25)
observed.trmean.diff <- observed.trmean.score.chinese - observed.trmean.score.other
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(other.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((restaurant.clean$score[index])) - mean((restaurant.clean$score[-index]))
trmeanDiff[i] <- mean((restaurant.clean$score[index]), trim = 0.25) - mean((restaurant.clean$score[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Other Avg Score", main="Perm. Test b/w Chinese & Other cuisine", v = observed.mean.diff)
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
load("~/Dropbox (Personal)/F15/MA371/Stats Project/RestaurantInspection/restaurantClean.Rda")
restaurant.clean <- subset(restaurant.clean, !is.na(grade) | grade != "NA")
restaurant.clean <- subset(restaurant.clean, score != -1, drop = T)
bwplot(mean(restaurant.clean)$score ~ cuisine_group_factor)
bwplot(mean(restaurant.clean)$score ~ restaurant.clean$cuisine_group_factor)
bwplot(mean(restaurant.clean$score) ~ restaurant.clean$cuisine_group_factor)
bwplot((restaurant.clean$score) ~ restaurant.clean$cuisine_group_factor)
bwplot((restaurant.clean$score) ~ restaurant.clean$cuisine_group_factor, main = "Boxplot for Score and Cuisine Group", xlab = "Cuisine Group", ylab = "Score")
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
fit<- lm(sqrt(score)~cuisine_group_factor + median_income.list, data=restaurant.clean)
summary(fit)
3.000e+00
3.069e-01
-6.739e-02
-1.421e-07
fit_2<- lm(sqrt(score)~median_income.list, data=restaurant.clean)
summary(fit_2)
fit_2<- lm(sqrt(score)~median_income.list, data=restaurant.clean)
summary(fit_2)
aic <- c(AIC(fit), AIC(fit_2))
aic
summary(fit)
load("~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/restaurantCleanWithAddress.Rda")
View(restaurant.clean.2)
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
combined.chinese.asian <- c(asian.restaurant, chinese.restaurant)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
medianDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))
medianDiff[i] <- median((combined.chinese.asian[index])) - median((combined.chinese.asian[-index]))
trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
combined.chinese.asian <- c(asian.restaurant, chinese.restaurant)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
medianDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))
medianDiff[i] <- median((combined.chinese.asian[index])) - median((combined.chinese.asian[-index]))
trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
N <- 10^4-1
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
combined.chinese.asian <- c(asian.restaurant, chinese.restaurant)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
medianDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))
medianDiff[i] <- median((combined.chinese.asian[index])) - median((combined.chinese.asian[-index]))
trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", v = observed.trmean.score.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
combined.chinese.asian <- c(asian.restaurant, chinese.restaurant)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))
trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", v = observed.trmean.score.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
set.seed(2015)
chinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Chinese", drop = T)
asian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == "Asian", drop = T)
combined.chinese.asian <- c(asian.restaurant, chinese.restaurant)
histogram(chinese.restaurant, xlab = "Score", v = mean(chinese.restaurant))
histogram(asian.restaurant, xlab = "Score", v = mean(asian.restaurant))
#mean
observed.avg.score.chinese <- mean(chinese.restaurant)
observed.avg.score.asian <- mean(asian.restaurant)
observed.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33
#trimmed mean
observed.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)
observed.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)
observed.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26
m <- length(chinese.restaurant)
total <- length(chinese.restaurant) + length(asian.restaurant)
meanDiff <- numeric(N)
trmeanDiff <- numeric(N)
for(i in 1 : N)
{
index <- sample(total, m, replace = FALSE)
meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))
trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)
}
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", v = observed.trmean.score.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
t.test(chinese.restaurant, asian.restaurant)$conf
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", v = observed.mean.diff)
(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", v = observed.trmean.score.diff)
(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", main = "Perm. Test for Difference in Trimmed Mean Score Between Chinese Restaurants and Asian Restaurants", v = observed.trmean.score.diff)
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main = "Perm. Test for Difference in Mean Score Between Chinese Restaurants and Asian Restaurants", v = observed.mean.diff)
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main = "Perm. Test for Difference in Mean Score Between Chinese Restaurants and Asian Restaurants", v = observed.mean.diff)
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main = "Difference in Mean Score b/w Chinese and Asian Restaurants", v = observed.mean.diff)
histogram(meanDiff, xlab = "Chinese Avg Score - Asian Avg Score", main = "Diff. in Mean Score b/w Chinese and Asian Restaurants", v = observed.mean.diff)
histogram(trmeanDiff, xlab = "Chinese Trimmed Median Score - Asian Trimmed Median Score", main = "Diff. in Trimmed Mean Score b/w Chinese and Asian Restaurants", v = observed.trmean.score.diff)
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
histogram(trmeanDiff, xlab = "Chinese Trimmed Mean Score - Asian Trimmed Mean Score", main = "Diff. in Trimmed Mean Score b/w Chinese and Asian Restaurants", v = observed.trmean.score.diff)
library(pacman)
p_load(RSocrata,plyr,RColorBrewer,hash, mosaic, ggmap, stringr)
xyplot(sqrt(score)~median_income.list | cuisine_group_factor, data = restaurant.clean)
xyplot(sqrt(score)~ log(median_income.list) | cuisine_group_factor, data = restaurant.clean)
xyplot(sqrt(score)~median_income.list | cuisine_group_factor, data = restaurant.clean)
load("~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/Data/restaurantClean.Rda")
colnames(restaurant.clean)
colnames(restaurant.clean)
mean(asian.restaurant)
load("~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/Data/restaurantCleanWithAddress.Rda")
df.full.address <- restaurant.clean.2
full.address <- paste(str_trim(df.full.address$building), str_trim(df.full.address$street), str_trim(df.full.address$boro), str_trim(df.full.address$zipcode))
myLocation <- cbind(full.address, as.character(df.full.address$camis), as.character(df.full.address$score), as.character(df.full.address$grade), df.full.address$roach_list, df.full.address$rodent_list)
list_lat_lon <- c()
limit <- 1
for( time in 1 : 5 )
{
for( i in limit : (limit+2000))
{
latlonLocation <- cbind(myLocation[i,1], myLocation[i,2], myLocation[i,3], (geocode(myLocation[i], output = "latlon", source = "google")), myLocation[i,5], myLocation[i,6])
# currently having problem due to Google throttle, would take 4 days
# FIXED by having a for loop running
if( as.numeric(myLocation[i,3]) < 10 )
{
latlonLocation <- cbind(grade = "Below 10", latlonLocation)
}
else if( as.numeric(myLocation[i,3]) < 20 )
{
latlonLocation <- cbind(grade = "Below 20", latlonLocation)
}
else if( as.numeric(myLocation[i,3]) < 30 )
{
latlonLocation <- cbind(grade = "Below 30", latlonLocation)
}
else
{
latlonLocation <- cbind(grade = "Else", latlonLocation)
}
list_lat_lon <- rbind(list_lat_lon, latlonLocation)
}
limit <- limit + 2001
}
#distQueryCheck() # check limit so far
list_lat_lon_2 <- cbind(list_lat_lon, df.full.address$roach_list[1:10005], df.full.address$rodent_list[1:10005])
head(list_lat_lon_2)
#colnames(list_lat_lon) <- c("grade", "zipcode", "camis", "score", "lon", "lat", "roach", "rodent")
colnames(list_lat_lon_2) <- c("grade", "address", "camis", "score", "lon", "lat", "roach", "rodent")
#Save the dataframe
as.data.frame(list_lat_lon_2)
save(list_lat_lon_2,file="/Data/geospatialData.Rda")
library(ggmap)
library(stringr)
full.address <- paste(str_trim(df.full.address$building), str_trim(df.full.address$street), str_trim(df.full.address$boro), str_trim(df.full.address$zipcode))
#### Geocoding: Define Locations ####
myLocation <- cbind(full.address, as.character(df.full.address$camis), as.character(df.full.address$score), as.character(df.full.address$grade), df.full.address$roach_list, df.full.address$rodent_list)
list_lat_lon <- c()
limit <- 1
for( time in 1 : 5 )
{
for( i in limit : (limit+2000))
{
latlonLocation <- cbind(myLocation[i,1], myLocation[i,2], myLocation[i,3], (geocode(myLocation[i], output = "latlon", source = "google")), myLocation[i,5], myLocation[i,6])
# currently having problem due to Google throttle, would take 4 days
# FIXED by having a for loop running
if( as.numeric(myLocation[i,3]) < 10 )
{
latlonLocation <- cbind(grade = "Below 10", latlonLocation)
}
else if( as.numeric(myLocation[i,3]) < 20 )
{
latlonLocation <- cbind(grade = "Below 20", latlonLocation)
}
else if( as.numeric(myLocation[i,3]) < 30 )
{
latlonLocation <- cbind(grade = "Below 30", latlonLocation)
}
else
{
latlonLocation <- cbind(grade = "Else", latlonLocation)
}
list_lat_lon <- rbind(list_lat_lon, latlonLocation)
}
limit <- limit + 2001
}
#distQueryCheck() # check limit so far
list_lat_lon_2 <- cbind(list_lat_lon, df.full.address$roach_list[1:10005], df.full.address$rodent_list[1:10005])
head(list_lat_lon_2)
#colnames(list_lat_lon) <- c("grade", "zipcode", "camis", "score", "lon", "lat", "roach", "rodent")
colnames(list_lat_lon_2) <- c("grade", "address", "camis", "score", "lon", "lat", "roach", "rodent")
#Save the dataframe
as.data.frame(list_lat_lon_2)
save(list_lat_lon_2,file="/Data/geospatialData.Rda")
list_lat_lon_2 <- as.data.frame(list_lat_lon_2)
save(list_lat_lon_2,file="/Data/geospatialData.Rda")
save(list_lat_lon_2,file="geospatialData.Rda")
load("~/Dropbox/F15/MA371/Stats Project/Data/geospatialData.Rda")
load("~/Dropbox/F15/MA371/Stats Project/Data/geospatialData.Rda")
save(list_lat_lon_2,file="Data/geospatialData.Rda")
load("~/Dropbox/F15/MA371/Stats Project/Data/geospatialData.Rda")
load("~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/Data/geospatialData.Rda")
myMap <- get_map(location="Manhattan", source="google", maptype="roadmap", crop=TRUE, zoom = 12, color = "bw")
roachMap <- ggmap(myMap) +
geom_point(aes(x = lon, y = lat, color = roach, alpha = factor(roach)),
data = list_lat_lon_2, size = 3) +
labs(title = "Distribution of Roaches on Manhattan Map", x = "Longitude", y = "Latitude")
load("Data/geospatialData.Rda")
