{
    "contents" : "#Clean#\nrestaurant.clean <- subset(restaurant.clean, score != -1, drop = T)\n#restaurant.clean <- subset(restaurant.clean, !is.na(grade) | grade != \"NA\")\nset.seed(2015)\n\n#### Chinese Restaurants (V) ####\n\n# General Statistics\nbwplot((restaurant.clean$score) ~ restaurant.clean$cuisine_group_factor, main = \"Boxplot for Score and Cuisine Group\", xlab = \"Cuisine Group\", ylab = \"Score\")\n\n#Permutation Test of Chinese Restaurants vs all of restaurants\nN <- 10^4-1\nchinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Chinese\", drop = T)\nother.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor != \"Chinese\", drop = T)\n\nhistogram(chinese.restaurant, xlab = \"Score\", v = mean(chinese.restaurant))\nhistogram(other.restaurant, xlab = \"Score\", v = mean(other.restaurant))\n\n#mean\nobserved.avg.score.chinese <- mean(chinese.restaurant)\nobserved.avg.score.other <- mean(other.restaurant)\nobserved.mean.diff <- observed.avg.score.chinese - observed.avg.score.other\n#trimmed mean\nobserved.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)\nobserved.trmean.score.other <- mean(other.restaurant, trim = 0.25)\nobserved.trmean.diff <- observed.trmean.score.chinese - observed.trmean.score.other\n\nm <- length(chinese.restaurant)\ntotal <- length(chinese.restaurant) + length(other.restaurant)\n\nmeanDiff <- numeric(N)\ntrmeanDiff <- numeric(N)\n\nfor(i in 1 : N)\n{\n  index <- sample(total, m, replace = FALSE)\n  meanDiff[i] <- mean((restaurant.clean$score[index])) - mean((restaurant.clean$score[-index]))\n  trmeanDiff[i] <- mean((restaurant.clean$score[index]), trim = 0.25) - mean((restaurant.clean$score[-index]), trim = 0.25)\n}\n\nhistogram(meanDiff, xlab = \"Chinese Avg Score - Other Avg Score\", main=\"Perm. Test b/w Chinese & Other cuisine\", v = observed.mean.diff)\n(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val\n# Seems like Chinese ave score is truly higher than other cuisine --> not as clean\n\nhistogram(trmeanDiff, xlab = \"Chinese Trimmed Mean Score - Other Trimmed Mean Score\", main=\"Perm. Test b/w Chinese & Other cuisine\", v = observed.trmean.diff)\n(sum(trmeanDiff > observed.trmean.diff) +1) / (N+1) # p-val\n# Seems like Chinese trimmed mean score is truly higher than other cuisine, but not as extreme as above --> not as clean\n\n#Confidence Interval of Chinese Restaurants Score\n\nchinese.rows <- cbind( score = as.numeric(chinese.restaurant), cat = FALSE)\nother.rows <- cbind( score = as.numeric(other.restaurant), cat = TRUE)\nchinese.and.other <- as.data.frame(rbind( chinese.rows, other.rows))\n\nfavstats(score~cat, data = chinese.and.other)\n\nt.test(score ~ cat, data = chinese.and.other, alt = \"greater\")\nt.test(chinese.restaurant, conf.level = 0.99)$conf\n\n#### Asian Restaurants (V) ####\n\n#Permutation Test of Asian Restaurants vs Chinese restaursnts\n#\n# Null hyphothesis: Asian and Chinese restaurants have the same score on average\n# Alternative hypothesis: Mean score of Chinese restaurants < those of Asian restaurants\n#\n# Result: p-value = 0.0505 (mean) and = 0.008 (trmean), \n# supporting the previous test between Chinese and others \n# that there are some extremely bad Chinese restaurants\n\nchinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Chinese\", drop = T)\nasian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Asian\", drop = T)\ncombined.chinese.asian <- c(asian.restaurant, chinese.restaurant)\n\nhistogram(chinese.restaurant, xlab = \"Score\", v = mean(chinese.restaurant))\nhistogram(asian.restaurant, xlab = \"Score\", v = mean(asian.restaurant))\n\n#mean\nobserved.avg.score.chinese <- mean(chinese.restaurant)\nobserved.avg.score.asian <- mean(asian.restaurant)\nobserved.mean.diff <- observed.avg.score.chinese - observed.avg.score.asian # -0.33\n\n#trimmed mean\nobserved.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)\nobserved.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)\nobserved.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.asian # -0.26\n\nm <- length(chinese.restaurant)\ntotal <- length(chinese.restaurant) + length(asian.restaurant)\n\nmeanDiff <- numeric(N)\ntrmeanDiff <- numeric(N)\n\nfor(i in 1 : N)\n{\n  index <- sample(total, m, replace = FALSE)\n  meanDiff[i] <- mean((combined.chinese.asian[index])) - mean((combined.chinese.asian[-index]))\n  trmeanDiff[i] <- mean((combined.chinese.asian[index]), trim = 0.25) - mean((combined.chinese.asian[-index]), trim = 0.25)\n}\n\nhistogram(meanDiff, xlab = \"Chinese Avg Score - Asian Avg Score\", main = \"Diff. in Mean Score b/w Chinese and Asian Restaurants\", v = observed.mean.diff)\n(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val\n\nhistogram(trmeanDiff, xlab = \"Chinese Trimmed Mean Score - Asian Trimmed Mean Score\", main = \"Diff. in Trimmed Mean Score b/w Chinese and Asian Restaurants\", v = observed.trmean.score.diff)\n(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val\n\n#Confidence Interval of Asian Restaurants\nt.test(chinese.restaurant, asian.restaurant)$conf\n\n\n#### Latin Restaurants (A) ####\n\n#Permutation Test of Latin Restaurants vs Chinese restaurants\n#\n# Null hypothesis: Mean score of Latin restaurants = mean score of Chinese restaurants\n# Alternative hypothesis: Latin restaurants have higher mean score\n# Result: p-value = 0.03 (mean) & = 0.016 (trmean), moderate evidence to reject null\n#\n\nchinese.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Chinese\", drop = T)\nlatin.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Latin/Spanish\", drop = T)\ncombined.chinese.latin <- c(chinese.restaurant, latin.restaurant)\n\n#mean\nobserved.avg.score.chinese <- mean(chinese.restaurant)\nobserved.avg.score.latin <- mean(latin.restaurant)\nobserved.mean.diff <- observed.avg.score.chinese - observed.avg.score.latin # -0.35\n\n#trimmed mean\nobserved.trmean.score.chinese <- mean(chinese.restaurant, trim = 0.25)\nobserved.trmean.score.latin <- mean(latin.restaurant, trim = 0.25)\nobserved.trmean.score.diff <- observed.trmean.score.chinese - observed.trmean.score.latin # -0.23\n\nm <- length(chinese.restaurant)\ntotal <- length(chinese.restaurant) + length(latin.restaurant)\n\nmeanDiff <- numeric(N)\nmedianDiff <- numeric(N)\ntrmeanDiff <- numeric(N)\n\nfor(i in 1 : N)\n{\n  index <- sample(total, m, replace = FALSE)\n  meanDiff[i] <- mean((combined.chinese.latin[index])) - mean((combined.chinese.latin[-index]))\n  medianDiff[i] <- median((combined.chinese.latin[index])) - median((combined.chinese.latin[-index]))\n  trmeanDiff[i] <- mean((combined.chinese.latin[index]), trim = 0.25) - mean((combined.chinese.latin[-index]), trim = 0.25)\n}\n\nhistogram(meanDiff, xlab = \"Chinese Avg Score - Latin Avg Score\", v = observed.mean.diff)\n(sum(meanDiff > observed.mean.diff) +1) / (N+1) # p-val\n\nhistogram(trmeanDiff, xlab = \"Chinese Trimmed Median Score - Latin Trimmed Median Score\", v = observed.trmean.score.diff)\n(sum(trmeanDiff > observed.trmean.score.diff) +1) / (N+1) # p-val\n\n# Confidence Interval of Latin Restaurants\nt.test(latin.restaurant, chinese.restaurant)$conf\n\n#### Latin vs Asian Restaurants (A) ####\n#\n# Null hypothesis: Latin and Asian restaurants are equally bad\n# Alternative hypothesis: Latin & Asian restaurants are not equally bad\n# Result: cannot reject null. \n#\n\nasian.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Asian\", drop = T)\nlatin.restaurant <- subset((restaurant.clean), select = score, cuisine_group_factor == \"Latin/Spanish\", drop = T)\ncombined.asian.latin <- c(asian.restaurant, latin.restaurant)\n\n#mean\nobserved.avg.score.asian <- mean(asian.restaurant)\nobserved.avg.score.latin <- mean(latin.restaurant)\nobserved.mean.diff <- observed.avg.score.asian - observed.avg.score.latin\n\n#trimmed mean\nobserved.trmean.score.asian <- mean(asian.restaurant, trim = 0.25)\nobserved.trmean.score.latin <- mean(latin.restaurant, trim = 0.25)\nobserved.trmean.score.diff <- observed.trmean.score.asian - observed.trmean.score.latin\n\nm <- length(asian.restaurant)\ntotal <- length(asian.restaurant) + length(latin.restaurant)\n\nmeanDiff <- numeric(N)\nmedianDiff <- numeric(N)\ntrmeanDiff <- numeric(N)\n\nfor(i in 1 : N)\n{\n  index <- sample(total, m, replace = FALSE)\n  meanDiff[i] <- mean((combined.asian.latin[index])) - mean((combined.asian.latin[-index]))\n  medianDiff[i] <- median((combined.asian.latin[index])) - median((combined.asian.latin[-index]))\n  trmeanDiff[i] <- mean((combined.asian.latin[index]), trim = 0.25) - mean((combined.asian.latin[-index]), trim = 0.25)\n}\n\nhistogram(meanDiff, xlab = \"Asian Avg Score - Latin Avg Score\", v = observed.mean.diff)\n((sum(meanDiff < observed.mean.diff) +1) / (N+1)) * 2 # p-val\n\nhistogram(trmeanDiff, xlab = \"Asian Trimmed Median Score - Latin Trimmed Median Score\", v = observed.trmean.score.diff)\n((sum(trmeanDiff < observed.trmean.score.diff) +1) / (N+1)) * 2 # p-val\n\n#Confidence Interval of Latin Restaurants\nt.test(latin.restaurant, asian.restaurant)$conf\n\n####Regression Model of Cuisine on Score####\n\nxyplot(sqrt(score)~median_income.list | cuisine_group_factor, data = restaurant.clean)\nxyplot(sqrt(score)~ log(median_income.list) | cuisine_group_factor, data = restaurant.clean)\n\nfit<- lm(sqrt(score)~cuisine_group_factor + median_income.list, data=restaurant.clean)\nsummary(fit)\n# Seems like the things that matter are being an Asian, Chinese, Italian, Latin/Spanish and Pizza place.\n# All these places have an influence to increase the score\n# Median income does not matter at all\n\nqqnorm(residuals(fit))\nqqline(residuals(fit))\nhistogram(residuals(fit))\n\nfit_2<- lm(sqrt(score)~median_income.list, data=restaurant.clean)\nsummary(fit_2)\n# Seems like the things that matter are being an Asian, Chinese, Italian, Latin/Spanish and Pizza place.\n# All these places have an influence to increase the score\n# Median income does not matter at all\n\nqqnorm(residuals(fit_2))\nqqline(residuals(fit_2))\nhistogram(residuals(fit_2))\n\naic <- c(AIC(fit), AIC(fit_2))\naic\n\n#### Rodents (C) ####\n\n# General statistics for rodents\n\n# Boostrap for rodents\nrodent_list <- subset((restaurant.clean), select = rodent_list, drop = T)\nboot.rodent <- numeric(N)\nfor(i in 1 : N)\n{\n  rodent <- sample(rodent_list, length(rodent_list), replace = T)\n  boot.rodent[i] <- mean(rodent) # TRUE / (TRUE + FALSE)\n}\nhistogram(boot.rodent, v = mean(boot.rodent), main = \"Bootstrap distribution of rodent\", xlab = \"Percent TRUE for rodent\")\nmean(boot.rodent)\nsd(boot.rodent)\nqqnorm(boot.rodent)\nqqline(boot.rodent)\n\n# Income effect on rodents\n\n# Cuisine effect on rodents??????\n\n\n\n\n\n#### Roaches (C) ####\n\n# General statistics for roaches\n\n# Boostrap for roaches\nroach_list <- subset((restaurant.clean), select = roach_list, drop = T)\nboot.roach <- numeric(N)\nfor(i in 1 : N)\n{\n  roach <- sample(roach_list, length(roach_list), replace = T)\n  boot.roach[i] <- mean(roach) # TRUE / (TRUE + FALSE)\n}\nhistogram(boot.roach, v = mean(boot.roach), main = \"Bootstrap distribution of roach\", xlab = \"Percent TRUE for roach\")\nmean(boot.roach)\nsd(boot.roach)\nqqnorm(boot.roach)\nqqline(boot.roach)\n\n# Income effect on roaches\n\n# Cuisine effect on roaches??????\n####Rodents/Roaches by log income####\nboxplot(log(restaurant.clean$median_income.list) ~ restaurant.clean$rodent_list, main = \"Boxplot of Rodent Presence With Log of Median Income\", xlab = \"Rodent Presence\", ylab = \"Log(Median Income)\")\nboxplot(log(restaurant.clean$median_income.list) ~ restaurant.clean$roach_list, main = \"Boxplot of Roach Presence With Log of Median Income\", xlab = \"Roach Presence\", ylab = \"Log(Median Income)\")\n",
    "created" : 1449417129956.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2871548393",
    "id" : "2565E692",
    "lastKnownWriteTime" : 1449765183,
    "path" : "~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/FinalCode.R",
    "project_path" : "FinalCode.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}