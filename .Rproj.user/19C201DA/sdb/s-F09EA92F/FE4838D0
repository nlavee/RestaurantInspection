{
    "contents" : "#### Requirements loading ####\n#install.packages(\"ggmap\")\nlibrary(ggmap)\nlibrary(stringr)\n\n#### Concatenate to get full address ####\ndf.full.address <- restaurant.clean.2\ncolnames(df.full.address)\n\nsummary(df.full.address$building)\nsummary((df.full.address$street))\nsummary((df.full.address$boro))\nsummary(df.full.address$zipcode)\n\n#concatenate everything to get the full address at a camis\nfull.address <- paste(str_trim(df.full.address$building), str_trim(df.full.address$street), str_trim(df.full.address$boro), str_trim(df.full.address$zipcode))\n\n#### Geocoding: Define Locations ####\nmyLocation <- cbind(full.address, as.character(df.full.address$camis), as.character(df.full.address$score), as.character(df.full.address$grade), df.full.address$roach_list, df.full.address$rodent_list)\nlist_lat_lon <- c()\nlimit <- 1\nfor( time in 1 : 5 )\n{\n  for( i in limit : (limit+2000))\n  {\n    latlonLocation <- cbind(myLocation[i,1], myLocation[i,2], myLocation[i,3], (geocode(myLocation[i], output = \"latlon\", source = \"google\")), myLocation[i,5], myLocation[i,6]) \n    # currently having problem due to Google throttle, would take 4 days \n    # FIXED by having a for loop running\n    \n    if( as.numeric(myLocation[i,3]) < 10 )\n    {\n      latlonLocation <- cbind(grade = \"Below 10\", latlonLocation)\n    }\n    else if( as.numeric(myLocation[i,3]) < 20 )\n    {\n      latlonLocation <- cbind(grade = \"Below 20\", latlonLocation)\n    }\n    else if( as.numeric(myLocation[i,3]) < 30 )\n    {\n      latlonLocation <- cbind(grade = \"Below 30\", latlonLocation)\n    }\n    else\n    {\n      latlonLocation <- cbind(grade = \"Else\", latlonLocation)\n    }\n    \n    list_lat_lon <- rbind(list_lat_lon, latlonLocation)\n  }\n  limit <- limit + 2001\n}\n\n# Getting latitude and longitude with the datasciencetoolkit instead of googlemap\n# Test to see whether we would get different and better lat and lon\nlatlon <- c()\nlimit <- 1\nfor( i in 1:5)\n{\n  for( count in limit : (limit + 2000))\n  {\n    address <- myLocation[count, 1]\n    latlon[count] <- geocode(address)\n  }\n}\nlatlon\n\ndistQueryCheck() # check limit so far\nlist_lat_lon_2 <- cbind(list_lat_lon, df.full.address$roach_list[1:10005], df.full.address$rodent_list[1:10005])\nhead(list_lat_lon_2)\n#colnames(list_lat_lon) <- c(\"grade\", \"zipcode\", \"camis\", \"score\", \"lon\", \"lat\", \"roach\", \"rodent\")\ncolnames(list_lat_lon_2) <- c(\"grade\", \"address\", \"camis\", \"score\", \"lon\", \"lat\", \"roach\", \"rodent\")\n\n#Save the dataframe\nas.data.frame(list_lat_lon_2)\nsave(list_lat_lon_2,file=\"/Data/geospatialData.Rda\")\n\n#### Geocoding: Define Map & Attributes ####\nmyMap <- get_map(location=\"Manhattan\", source=\"google\", maptype=\"roadmap\", crop=TRUE, zoom = 12, color = \"bw\")\n# zoom = integer from 3-21\n# 3 = continent, 10=city, 21=building\n# , color = \"bw\"\n\n#### Map with size representing score ####\nggmap(myMap) +\n  geom_point(aes(x = lon, y = lat, size=score),\n             data = list_lat_lon)\n\n#### Map with colour representing score ####\nggmap(myMap) +\n  geom_point(aes(x = lon, y = lat, colour = as.numeric(score)),\n             data = list_lat_lon, size = 2) + \n  scale_colour_gradient2(limit = c(0, 30), low=\"white\", mid=\"cyan\", high=\"black\", midpoint=median(as.numeric(list_lat_lon$score))) +\n  labs(title = \"Distribution of Score on Manhattan Map\", x = \"Longitude\", y = \"Latitude\")\n\n#### Map with color representing grades that are factor from score ####\nggmap(myMap) +\n  geom_point(aes(x = lon, y = lat, color = factor(grade)),\n             data = list_lat_lon, size = 3)\n\n#### Map with color representing roach ####\nggmap(myMap) +\n  geom_point(aes(x = lon, y = lat, color = roach, alpha = factor(roach)),\n             data = list_lat_lon_2, size = 3) + \n  labs(title = \"Distribution of Roaches on Manhattan Map\", x = \"Longitude\", y = \"Latitude\")\n\n#### Map with color representing rodent ####\nggmap(myMap) +\n  geom_point(aes(x = lon, y = lat, color = rodent, alpha = factor(rodent)),\n             data = list_lat_lon_2, size = 3) +\n  labs(title = \"Distribution of Rodents on Manhattan Map\", x = \"Longitude\", y = \"Latitude\")",
    "created" : 1449166215583.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2471587826",
    "id" : "FE4838D0",
    "lastKnownWriteTime" : 1450126120,
    "path" : "~/Dropbox/F15/MA371/Stats Project/RestaurantInspection/RMap.R",
    "project_path" : "RMap.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}